"""init migration

Revision ID: 20ed7bb72dd2
Revises: 1071d3875994
Create Date: 2025-01-27 13:16:35.740379

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20ed7bb72dd2'
down_revision: Union[str, None] = '1071d3875994'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=30), nullable=False),
    sa.Column('user_email', sa.VARCHAR(length=250), nullable=True),
    sa.Column('user_password', sa.VARCHAR(length=16), nullable=False),
    sa.Column('role', sa.VARCHAR(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('changes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=100), server_default='requested', nullable=True),
    sa.Column('creator_user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('parrent_id', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parrent_id'], ['changes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('disliked_changes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('change_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liked_changes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('change_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('releases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('change_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('release_date', sa.DateTime(), nullable=False),
    sa.Column('release_source', sa.String(), nullable=False),
    sa.Column('release_documents', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('change_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.Integer(), nullable=True),
    sa.Column('release_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('replied_to_comment_id', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('dislikes', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], ),
    sa.ForeignKeyConstraint(['release_id'], ['releases.id'], ),
    sa.ForeignKeyConstraint(['replied_to_comment_id'], ['comments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('disliked_releases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('release_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['release_id'], ['releases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liked_releases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('release_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['release_id'], ['releases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('liked_releases')
    op.drop_table('disliked_releases')
    op.drop_table('comments')
    op.drop_table('subscriptions')
    op.drop_table('releases')
    op.drop_table('liked_changes')
    op.drop_table('disliked_changes')
    op.drop_table('changes')
    op.drop_table('users')
    # ### end Alembic commands ###
